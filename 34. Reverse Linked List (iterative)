Reverse a singly-linked list iteratively.

Examples

L = null, return null
L = 1 -> null, return 1 -> null
L = 1 -> 2 -> 3 -> null, return 3 -> 2 -> 1 -> null
 /**
 * class ListNode {
 *   public int value;
 *   public ListNode next;
 *   public ListNode(int value) {
 *     this.value = value;
 *     next = null;
 *   }
 * }
 */
public class Solution {
  public ListNode reverse(ListNode head) {
    if (head == null) {
      return null;
    }
   
    // while (head != null) {
    //   ListNode next = head.next;
    //   head.next = previous;
    //   previous = head;
    //   head = next;
    // }
    ListNode previous = null;
    ListNode cur = head;
    ListNode nxt = null;
    while (cur != null) {
      nxt = cur.next; //一定要在反转之前记下来，否则就会丢失current原本的next
      cur.next = previous;
      previous = cur;
      cur = nxt; 
    }
    return previous;
}
}
