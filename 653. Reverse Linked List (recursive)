653. Reverse Linked List (recursive)

L = null, return null
L = 1 -> null, return 1 -> null
L = 1 -> 2 -> 3 -> null, return 3 -> 2 -> 1 -> null

/**
 * class ListNode {
 *   public int value;
 *   public ListNode next;
 *   public ListNode(int value) {
 *     this.value = value;
 *     next = null;
 *   }
 * }
 */
public class Solution {
  public ListNode reverse(ListNode head) {
    //corner case    +     base case 
    if (head == null || head.next == null) {
      return head;
    }
   //subproblem
   ListNode newHead = reverse(head.next);
   head.next.next = head;  //ListNode n2 = head.next;
   head.next = null; //n2.next = head;
   return newHead;

  }
}
