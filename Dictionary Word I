99. Dictionary Word I

Given a word and a dictionary, determine if it can be composed by concatenating words from the given dictionary.

Assumptions

The given word is not null and is not empty
The given dictionary is not null and is not empty and all the words in the dictionary are not null or empty
Examples

Dictionary: {“bob”, “cat”, “rob”}

Word: “robob” return false

Word: “robcatbob” return true since it can be composed by "rob", "cat", "bob"

public class Solution {
  public boolean canBreak(String input, String[] dict) {
    Set<String> dictSet = toSet(dict);
    boolean[] M = new boolean[input.length()+1]; // + 1 是因为base case 是 0 个letter 要把它加上
    M[0] = true; //base case 
    for (int i = 1; i <= input.length(); i++){ // i 就是input 里面的每一个letter
      for (int j = 0; j < i; j++) { //j:每次cut 的数量 => 左大段; 当 j = 0, 就是一刀也不切
      //check the subproblem and the rest of the word
      if (M[j] && dictSet.contains(input.substring(j,i))) {
        M[i] = true; //比如 i 可以是 bobcat, 然后 j = 1, bob  cat
        break;
      }
    }
   }
   return M[input.length()];
}
private Set<String> toSet(String[] dict) {
  Set<String> set = new HashSet<>();
  for (String s: dict) {
    set.add(s);
  }
  return set;
}
}
